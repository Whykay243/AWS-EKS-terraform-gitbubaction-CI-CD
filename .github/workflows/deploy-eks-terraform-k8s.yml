name: Deploy EKS via Terraform and Kubernetes

on:
  push:
    branches: [main]

permissions:
  id-token: write          # Needed for GitHub OIDC to assume AWS role securely
  contents: read

env:
  AWS_REGION: us-east-1                # AWS Region for resources
  BUCKET_NAME: whykay-backend-bucket  # S3 bucket for Terraform backend state
  TF_KEY: eks/terraform.tfstate        # Path to Terraform state file in S3
  TF_REGION: us-east-1                 # Region of S3 backend
  CLUSTER_NAME: my-eks-cluster         # Name of EKS cluster

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Get repo code

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::293926504711:role/Githubaction-aws-assumerole
          aws-region: ${{ env.AWS_REGION }}  # Authenticate using GitHub OIDC and IAM Role

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3  # Setup Terraform CLI

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ env.BUCKET_NAME }}" \
            -backend-config="key=${{ env.TF_KEY }}" \
            -backend-config="region=${{ env.TF_REGION }}"  # Initialize Terraform with S3 backend

      - name: Terraform Validate
        run: terraform validate  # Check config correctness

      - name: Terraform Plan
        run: terraform plan -out=tfplan.out  # Generate execution plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan.out  # Apply changes on main branch

      - name: Generate kubeconfig file dynamically
        if: github.ref == 'refs/heads/main'
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }} --kubeconfig kubeconfig.yaml
          # Create kubeconfig for cluster access during workflow

      - name: Upload kubeconfig artifact (optional)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: kubeconfig
          path: kubeconfig.yaml  # Save kubeconfig as downloadable artifact

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: terraform  # Wait for terraform job to complete

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Get repo code for deployment manifests

      - name: Download kubeconfig artifact
        uses: actions/download-artifact@v3
        with:
          name: kubeconfig
          path: .  # Retrieve kubeconfig from previous job

      - name: Set KUBECONFIG environment variable
        run: echo "KUBECONFIG=$(pwd)/kubeconfig.yaml" >> $GITHUB_ENV
        # Tell kubectl where to find kubeconfig